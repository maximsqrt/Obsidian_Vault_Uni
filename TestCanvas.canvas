{
	"nodes":[
		{"id":"d71efe1557bf396c","type":"text","text":"---\ntitle: Dashboard\ntype: note\n---\nKlar. Hier ist ein **integriertes `Dashboard.md`**, inkl. WIP-Sektionen f√ºr den Tag **`#status/wip`** ‚Äì direkt kopierfertig.\n\n````markdown\n---\ntitle: Dashboard\ntype: note\n---\n\n# üß≠ Dashboard\n\n## Heute\n- **Datum:** `= date(today).toFormat(\"cccc, dd.LL.yyyy\")`\n\n> [!todo] F√§llig **heute**\n```tasks\nnot done\ndue today\nsort by priority desc\nsort by due\n````\n\n> [!todo] F√§llig **diese Woche**\n\n```tasks\nnot done\ndue after today\ndue before in 7 days\nsort by due\ngroup by due\n```\n\n> [!abstract] Zuletzt ge√§ndert (Top 10)\n\n```dataview\nLIST FROM \"\"\nSORT file.mtime DESC\nLIMIT 10\n```\n\n---\n\n# ‚öôÔ∏è WIP ‚Äî Tasks mit Tag `#status/wip`\n\n## √úbersicht (KPIs)\n\n- **Offene WIP-Tasks:** `= dv.pages(\"\").where(p => p.file.etags.has(\"status/wip\")).flatMap(p => p.file.tasks).where(t => !t.completed).length`\n    \n- **√úberf√§llig:** `= dv.pages(\"\").flatMap(p => p.file.tasks).where(t => !t.completed && t.due && t.due < date(today)).length`\n    \n\n## WIP ‚Ä¢ Heute f√§llig\n\n```tasks\nnot done\n(tags include #status/wip)\ndue today\nsort by priority desc\nsort by due\n```\n\n## WIP ‚Ä¢ Diese Woche\n\n```tasks\nnot done\n(tags include #status/wip)\ndue after today\ndue before in 7 days\nsort by due\ngroup by due\n```\n\n## WIP ‚Ä¢ √úberf√§llig\n\n```tasks\nnot done\n(tags include #status/wip)\ndue before today\nsort by due\n```\n\n## WIP ‚Ä¢ Ohne F√§lligkeitsdatum\n\n```tasks\nnot done\n(tags include #status/wip)\nno due date\nsort by path\n```\n\n## WIP ‚Ä¢ Tabelle (Kontext & Ordner)\n\n```dataview\nTABLE WITHOUT ID\n  t.text AS \"Task\",\n  t.due AS \"Due\",\n  choice(t.priority, t.priority, \"\") AS \"Prio\",\n  file.link AS \"Note\",\n  file.folder AS \"Ordner\"\nFROM \"\"\nFLATTEN file.tasks AS t\nWHERE !t.completed\nAND contains(file.etags, \"status/wip\")\nSORT t.due ASC NULLS LAST, t.priority DESC, file.mtime DESC\nLIMIT 200\n```\n\n---\n\n# üìÅ Projekte (optional)\n\n```dataview\nTABLE file.link AS Projekt, status, next_action, due\nFROM \"02_Projects\"\nWHERE (contains(file.etags, \"status/wip\") OR lower(string(status)) = \"wip\")\nSORT due ASC NULLS LAST, file.mtime DESC\nLIMIT 50\n```\n\n---\n\n# üì® Inbox (offene Captures)\n\n```dataview\nTASK FROM \"00_Inbox\"\nWHERE !completed\nSORT file.mtime DESC\n```\n\n```\n\n> Optional einengen auf API-Kontext: Ersetze in den **Tasks-Bl√∂cken** die Filter-Zeile durch  \n> `(tags include #status/wip) AND (tags include #api)`  \n> und f√ºge in den **Dataview-WHERE** Bedingungen `AND contains(file.etags, \"api\")` hinzu.\n```","x":-1520,"y":-600,"width":940,"height":1900,"color":"2"},
		{"id":"897685e63dede2ed","type":"file","file":"Intranet_IntraDev_Compare.base","x":-3240,"y":-440,"width":1201,"height":1208,"color":"1"}
	],
	"edges":[
		{"id":"ece2e01db080a532","fromNode":"897685e63dede2ed","fromSide":"right","toNode":"d71efe1557bf396c","toSide":"left","color":"3","label":"TESTLABEL"}
	]
}